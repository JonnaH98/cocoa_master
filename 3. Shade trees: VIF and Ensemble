if(!require(terra)) install.packages("terra") else library(terra)
if(!require(raster)) install.packages("raster") else library(raster)
if(!require(BiodiversityR)) install.packages("BiodiversityR") else  library(BiodiversityR)
if(!require(rJava)) install.packages("rJava") else library(rJava)

#This code follows the code structure of de Sousa et al (2019) for the ensemble modelling, not for the VIF
#Read presence points
setwd ("C:/Users/jonna/OneDrive/Dokument/R")           #########################################Change directory

#occurence <- paste( 'PresencePointsEnvFilter.csv', sep='')
#occurencecsv <- read.csv(occurence,header = T, sep = ";")
#coord<- as.data.frame(occurencecsv[,c(1:3)])

occurence <- paste( 'PresencePointsEnvFilterNoCleiHet.csv', sep='') 
occurencecsv <- read.csv(occurence,header = T, sep = ";")
coord<- as.data.frame(occurencecsv[,c(1:3)])


randombackground <- paste( 'RandomPoints.csv', sep='')
randomcsv <- read.csv(randombackground,header = T, sep = ";")
background<- as.data.frame(randomcsv[,c(1:3)])

both <- paste( 'PresencePointsandRandomNoCleiHet.csv', sep='')
bothcsv <- read.csv(both,header = T, sep = ";")
allpoints<- as.data.frame(bothcsv[,c(1:3)])

#Read bioclim data
setwd ("C:/Users/jonna/OneDrive/Dokument/R/wc2.1_2.5m_bio")       #########################################Change directory
listbioclim <- list.files (pattern=".tif")
bioclim<- rast(listbioclim)

#Set area being looked at and its projection
westafrica <- extent(-16, 17, 1, 14)
myproj <- "+proj=longlat +datum=WGS84"

#Set bioclim data to the desired area
crs(bioclim) <- myproj
bioclim <- crop(bioclim, westafrica) 
bioclim <- stack(bioclim)

#check VIF and exclude for those with a higher value than 10

VIF.result <- ensemble.VIF(x = bioclim, a = allpoints[,c(2:3)],VIF.max = 10 )

#Selected bioclim predictors that have VIF lower than 10

bioclim <- subset(bioclim, subset = VIF.result$vars.included)

#Ensemble modelling for each species

listofspecies <- sort(unique(coord$species))

time <- Sys.time() 
print(time) 
for (i in listofspecies) {
  
  coordtemp = coord[coord$species == i,]
  
  # step 1: 4-fold cross-validation for calibration
  
  step1 <- ensemble.calibrate.weights(x = bioclim, p = coordtemp[,c(2,3)], a = background[,c(2,3)],
                                          k=4,layer.drops=NULL, excludep = TRUE,
                                          SINK=TRUE, species.name= i,
                                          MAXENT=1, GBM=1, GBMSTEP=1, RF=1, 
                                          GLM=1, GLMSTEP=1, GAM=1, 
                                          GAMSTEP=1, MGCV=1, MGCVFIX=1, 
                                          EARTH=1, RPART=1, NNET=1, FDA=1, 
                                          SVM=1, SVME=1, BIOCLIM=1, 
                                          DOMAIN=1, MAHAL=1,
                                          ENSEMBLE.tune=TRUE, PROBIT=TRUE,
                                          threshold.method =  "MaxSens+Spec",
                                          threshold.sensitivity = 0.9,
                                          threshold.PresenceAbsence = TRUE, 
                                          ENSEMBLE.best=0, 
                                          ENSEMBLE.exponent=c(1, 2, 4, 6, 8),
                                          ENSEMBLE.min=0.7,
                                          Yweights="BIOMOD", factors=NULL,
                                          PLOTS=FALSE, formulae.defaults=TRUE,
                                          GBMSTEP.learning.rate=0.002)
  
  print (i)
  print ("step 1 done")
  print(Sys.time())
  
  # step 2: create models that will be used for the raster predictions
 
   # models with input.weights <0.05 are excluded
  output_weights <- step1$output.weights
  output_weights[output_weights < 0.05] <- 0
 
  step2 <- ensemble.calibrate.models(x = bioclim, p = coordtemp[,c(2,3)], a = background[,c(2,3)],
                                         k=4, layer.drops=NULL,
                                         SINK=TRUE, species.name = i,
                                         input.weights=output_weights,
                                         threshold.sensitivity = 0.9,
                                         threshold.PresenceAbsence = TRUE, 
                                         ENSEMBLE.tune=FALSE, PROBIT=TRUE,
                                         Yweights="BIOMOD", factors=NULL,
                                         PLOTS=FALSE, formulae.defaults=TRUE,
                                         GBMSTEP.learning.rate=0.002,
                                         models.save = TRUE)
 
  print (i)
  print ("step 2 done")
  print(Sys.time())
  
  #step3: Write raster for current climate
  ensemble_current <- ensemble.raster(xn = bioclim ,
                                      models.list = step2$models,
                                      input.weights=output_weights,
                                      thresholds = step2$models$thresholds,
                                      SINK=TRUE,
                                      RASTER.species.name = i, 
                                      RASTER.stack.name="bioclim")
  

  # write raster for GCMs for SSP126 and SSP585
  
  print (i)
  print ("step 3 done")
  print(Sys.time())
  
  gcm <- c("ACCESS-CM2",  "EC-Earth3-Veg", "EC-Earth3-Veg-LR", "IPSL-CM6A-LR")
  SSP <- c("ssp126","ssp585")
 
  for (k in gcm){
      
      for (r in SSP){
        
      #load GCM layers
        
      setwd ("C:/Users/jonna/OneDrive/Dokument/R/Future") #########################################Change directory
      gcmfiles <- paste0("C:/Users/jonna/OneDrive/Dokument/R/Future/wc2.1_2.5m_bioc_", k, "_", r,"_2041-2060.tif")   #########################################Change directory
      
      gcm_model <- raster::stack(gcmfiles)
      
      gcm_model <- gcm_model[[c(3,8,9,4,18,19,14,5, 13)]] #bioclim variables that passed VIF
      
      crs(gcm_model) <- myproj
      gcm_model <- crop(gcm_model, westafrica)
      gcm_model <- stack(gcm_model)
      
      future <- bioclim
      
      for (y in 1:9){
        future[[y]] <- gcm_model [[y]] #set future as the gcm_files
      }
     
      names(future) <- names(bioclim)
      
      ensemble_future <- ensemble.raster(xn = future,
                                        models.list = step2$models,
                                        input.weights = output_weights,
                                        thresholds = step2$models$thresholds,
                                        SINK = TRUE,
                                        RASTER.species.name = i, 
                                        RASTER.stack.name = paste(k,r,sep = "_"))
      
      print (r)
      print(Sys.time())
  print (i)
  print (k)
  print(Sys.time())
  
  
  
}
} 
}







