if(!require(terra)) install.packages("terra") else library(terra)
if(!require(raster)) install.packages("raster") else library(raster)
if(!require(BiodiversityR)) install.packages("BiodiversityR") else  library(BiodiversityR)
if(!require(rJava)) install.packages("rJava") else library(rJava)


#This code follows the code structure of de Sousa et al (2019)


#Read presence points
setwd ("C:/Users/jonna/OneDrive/Dokument/R")           #########################################Change directory

occurence <- paste( 'CocoaPresencePoints.csv', sep='')
occurencecsv <- read.csv(occurence,header = T, sep = ";")
coord<- as.data.frame(occurencecsv[,c(1:3)])

randombackground <- paste( 'CocoaBackground.csv', sep='')
randomcsv <- read.csv(randombackground,header = T, sep = ";")
background<- as.data.frame(randomcsv[,c(1:3)])

both <- paste( 'CocoaPresencePointsandBackground.csv', sep='')
bothcsv <- read.csv(both,header = T, sep = ";")
allpoints<- as.data.frame(bothcsv[,c(1:3)])

#Read bioclim data
setwd ("C:/Users/jonna/OneDrive/Dokument/R/wc2.1_30s_bio")       #########################################Change directory
listbioclim <- list.files (pattern=".tif")
bioclim<- rast(listbioclim)

#Set area being looked at and its projection
GHA_CDI <- extent(-9, 4, 2, 12)

myproj <- "+proj=longlat +datum=WGS84"

#Administrative boundries of selected countries in West Africa
#GHANA_CDI <- "C:/Users/jonna/Documents/GHA_CDI.shp"
#GHANA_CDI <- readOGR(GHANA_CDI) 
#GHANA_CDI <- raster::crop(GHANA_CDI, GHA_CDI)

#Set bioclim data to the desired area
crs(bioclim) <- myproj
bioclim <- crop(bioclim, GHA_CDI)
bioclim <- stack(bioclim)

#Ensemble modelling for cocoa

listofspecies <- sort(unique(coord$species))

time <- Sys.time() 
print(time) 
for (i in listofspecies) {
  
  coordtemp = coord[coord$species == i,]
  
  # step 1: 4-fold cross-validation to calibrate the model
  
  step1 <- ensemble.calibrate.weights(x = bioclim, p = coordtemp[,c(2,3)], a = background[,c(2,3)],
                                      k=4,layer.drops=NULL, excludep = TRUE,
                                      SINK=TRUE, species.name= i,
                                      MAXENT=1, GBM=1, GBMSTEP=1, RF=1, 
                                      GLM=1, GLMSTEP=1, GAM=1, 
                                      GAMSTEP=1, MGCV=1, MGCVFIX=1, 
                                      EARTH=1, RPART=1, NNET=1, FDA=1, 
                                      SVM=1, SVME=1, BIOCLIM=1, 
                                      DOMAIN=1, MAHAL=1,
                                      ENSEMBLE.tune=TRUE, PROBIT=TRUE,
                                      threshold.method =  "MaxSens+Spec",
                                      threshold.sensitivity = 0.9,
                                      threshold.PresenceAbsence = TRUE, 
                                      ENSEMBLE.best=0, 
                                      ENSEMBLE.exponent=c(1, 2, 4, 6, 8),
                                      ENSEMBLE.min=0.7,
                                      Yweights="BIOMOD", factors=NULL,
                                      PLOTS=FALSE, formulae.defaults=TRUE,
                                      GBMSTEP.learning.rate=0.002)
  
  print (i)
  print ("step 1 done")
  print(Sys.time())
  
  # step 2: create models that will be used for the raster predictions
  
  # models with input.weights <0.05 are excluded
  output_weights <- step1$output.weights
  output_weights[output_weights < 0.05] <- 0
 
  step2 <- ensemble.calibrate.models(x = bioclim, p = coordtemp[,c(2,3)], a = background[,c(2,3)],
                                     k=4, layer.drops=NULL,
                                     SINK=TRUE, species.name = i,
                                     input.weights=output_weights,
                                     threshold.sensitivity = 0.9,
                                     threshold.PresenceAbsence = TRUE, 
                                     ENSEMBLE.tune=FALSE, PROBIT=TRUE,
                                     Yweights="BIOMOD", factors=NULL,
                                     PLOTS=FALSE, formulae.defaults=TRUE,
                                     GBMSTEP.learning.rate=0.002,
                                     models.save = TRUE)
  
  
  print (i)
  print ("step 2 done")
  print(Sys.time())
  
  #step3: Write raster for current climate
  ensemble_current <- ensemble.raster(xn = bioclim ,
                                      models.list = step2$models,
                                      input.weights=output_weights,
                                      thresholds = step2$models$thresholds,
                                      SINK=TRUE,
                                      RASTER.species.name = i, 
                                      RASTER.stack.name="bioclim")
    
  print (i)
  print ("step 3 done")
  print(Sys.time())
}
